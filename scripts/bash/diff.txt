diff --git a/.vscode/settings.json b/.vscode/settings.json
index 7328ed4..3a4fefb 100644
--- a/.vscode/settings.json
+++ b/.vscode/settings.json
@@ -20,6 +20,8 @@
     "craco",
     "iconify",
     "tanstack",
-    "unocss"
+    "unocss",
+    "Konva",
+    "tanstack"
   ]
 }
diff --git a/package.json b/package.json
index badcedb..bcf5937 100644
--- a/package.json
+++ b/package.json
@@ -19,10 +19,14 @@
     "@tanstack/react-table": "^8.8.5",
     "@unocss/preset-rem-to-px": "^0.51.13",
     "@unocss/reset": "^0.51.13",
+    "bezier-js": "^6.1.3",
+    "konva": "^9.0.2",
     "react": "^18.2.0",
     "react-dom": "^18.2.0",
+    "react-konva": "^18.2.8",
     "react-router-dom": "^6.11.1",
     "react-table": "^7.8.0",
+    "react-use": "^17.4.0",
     "web-vitals": "^2.1.4"
   },
   "devDependencies": {
@@ -34,6 +38,7 @@
     "@testing-library/jest-dom": "^5.16.5",
     "@testing-library/react": "^13.4.0",
     "@testing-library/user-event": "^13.5.0",
+    "@types/bezier-js": "^4.1.0",
     "@types/jest": "^27.5.2",
     "@types/node": "^16.18.24",
     "@types/react": "^18.2.0",
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index c375f7a..ca0a685 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -12,6 +12,7 @@ specifiers:
   '@testing-library/jest-dom': ^5.16.5
   '@testing-library/react': ^13.4.0
   '@testing-library/user-event': ^13.5.0
+  '@types/bezier-js': ^4.1.0
   '@types/jest': ^27.5.2
   '@types/node': ^16.18.24
   '@types/react': ^18.2.0
@@ -20,16 +21,20 @@ specifiers:
   '@unocss/preset-rem-to-px': ^0.51.13
   '@unocss/reset': ^0.51.13
   '@unocss/webpack': ^0.51.13
+  bezier-js: ^6.1.3
   eslint: ^8.39.0
   git-cz: ^4.9.0
   husky: ^8.0.3
+  konva: ^9.0.2
   lint-staged: ^13.2.2
   npm-run-all: ^4.1.5
   react: ^18.2.0
   react-dom: ^18.2.0
+  react-konva: ^18.2.8
   react-router-dom: ^6.11.1
   react-scripts: 5.0.1
   react-table: ^7.8.0
+  react-use: ^17.4.0
   tsconfig-paths-webpack-plugin: ^4.0.1
   typescript: ^4.9.5
   unocss: ^0.51.13
@@ -41,10 +46,14 @@ dependencies:
   '@tanstack/react-table': 8.8.5_biqbaboplfbrettd7655fr4n2y
   '@unocss/preset-rem-to-px': 0.51.13
   '@unocss/reset': 0.51.13
+  bezier-js: 6.1.3
+  konva: 9.0.2
   react: 18.2.0
   react-dom: 18.2.0_react@18.2.0
+  react-konva: 18.2.8_3ix5eityo3art7xms4yy5bn3bu
   react-router-dom: 6.11.1_biqbaboplfbrettd7655fr4n2y
   react-table: 7.8.0_react@18.2.0
+  react-use: 17.4.0_biqbaboplfbrettd7655fr4n2y
   web-vitals: 2.1.4
 
 devDependencies:
@@ -56,6 +65,7 @@ devDependencies:
   '@testing-library/jest-dom': 5.16.5
   '@testing-library/react': 13.4.0_biqbaboplfbrettd7655fr4n2y
   '@testing-library/user-event': 13.5.0
+  '@types/bezier-js': 4.1.0
   '@types/jest': 27.5.2
   '@types/node': 16.18.24
   '@types/react': 18.2.0
@@ -1438,7 +1448,6 @@ packages:
     engines: {node: '>=6.9.0'}
     dependencies:
       regenerator-runtime: 0.13.11
-    dev: true
 
   /@babel/template/7.20.7:
     resolution: {integrity: sha512-8SegXApWe6VoNw0r9JHpSteLKTpTiLZ4rMlGIm9JQ18KiCtyQiAMEazujAHrUS5flrcqYZa75ukev3P6QmUwUw==}
@@ -2725,6 +2734,10 @@ packages:
       '@babel/types': 7.21.4
     dev: true
 
+  /@types/bezier-js/4.1.0:
+    resolution: {integrity: sha512-ElU16s8E6Pr6magp8ihwH1O8pbUJASbMND/qgUc9RsLmP3lMLHiDMRXdjtaObwW5GPtOVYOsXDUIhTIluT+yaw==}
+    dev: true
+
   /@types/body-parser/1.19.2:
     resolution: {integrity: sha512-ALYone6pm6QmwZoAgeyNksccT9Q4AWZQ6PvfwR37GT6r6FWUPguq6sUmNGSMV2Wr761oQoBxwGGa6DR5o1DC9g==}
     dependencies:
@@ -2829,6 +2842,10 @@ packages:
       pretty-format: 27.5.1
     dev: true
 
+  /@types/js-cookie/2.2.7:
+    resolution: {integrity: sha512-aLkWa0C0vO5b4Sr798E26QgOkss68Un0bLjs7u9qxzPT5CG+8DuNTffWES58YzJs3hrVAOs1wonycqEBqNJubA==}
+    dev: false
+
   /@types/json-schema/7.0.11:
     resolution: {integrity: sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==}
     dev: true
@@ -2869,7 +2886,6 @@ packages:
 
   /@types/prop-types/15.7.5:
     resolution: {integrity: sha512-JCB8C6SnDoQf0cNycqd/35A7MjcnK+ZTqE7judS6o7utxUCg6imJg3QK2qzHKszlTjcj2cn+NwMB2i96ubpj7w==}
-    dev: true
 
   /@types/q/1.5.5:
     resolution: {integrity: sha512-L28j2FcJfSZOnL1WBjDYp2vUHCeIFlyYI/53EwD/rKUBQ7MtUUfbQWiyKJGpcnv4/WgrhWsFKrcPstcAt/J0tQ==}
@@ -2889,13 +2905,18 @@ packages:
       '@types/react': 18.2.0
     dev: true
 
+  /@types/react-reconciler/0.28.2:
+    resolution: {integrity: sha512-8tu6lHzEgYPlfDf/J6GOQdIc+gs+S2yAqlby3zTsB3SP2svlqTYe5fwZNtZyfactP74ShooP2vvi1BOp9ZemWw==}
+    dependencies:
+      '@types/react': 18.2.0
+    dev: false
+
   /@types/react/18.2.0:
     resolution: {integrity: sha512-0FLj93y5USLHdnhIhABk83rm8XEGA7kH3cr+YUlvxoUGp1xNt/DINUMvqPxLyOQMzLmZe8i4RTHbvb8MC7NmrA==}
     dependencies:
       '@types/prop-types': 15.7.5
       '@types/scheduler': 0.16.3
       csstype: 3.1.2
-    dev: true
 
   /@types/resolve/1.17.1:
     resolution: {integrity: sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==}
@@ -2909,7 +2930,6 @@ packages:
 
   /@types/scheduler/0.16.3:
     resolution: {integrity: sha512-5cJ8CB4yAx7BH1oMvdU0Jh9lrEXyPkar6F9G/ERswkCuvP4KQZfZkSjcMbAICCpQTN4OuZn8tz0HiKv9TGZgrQ==}
-    dev: true
 
   /@types/semver/7.3.13:
     resolution: {integrity: sha512-21cFJr9z3g5dW8B0CVI9g2O9beqaThGQ6ZFBqHfwhzLDKUxaqTIy3vnfah/UPkfOiF2pLq+tGz+W8RyCskuslw==}
@@ -3431,6 +3451,10 @@ packages:
       '@xtuc/long': 4.2.2
     dev: true
 
+  /@xobotyi/scrollbar-width/1.9.5:
+    resolution: {integrity: sha512-N8tkAACJx2ww8vFMneJmaAgmjAG1tnVBZJRLRcx061tmsLRZHSEZSLuGWnwPtunsSLvSqXQ2wfp7Mgqg1I+2dQ==}
+    dev: false
+
   /@xtuc/ieee754/1.2.0:
     resolution: {integrity: sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==}
     dev: true
@@ -3992,6 +4016,10 @@ packages:
     resolution: {integrity: sha512-x+VAiMRL6UPkx+kudNvxTl6hB2XNNCG2r+7wixVfIYwu/2HKRXimwQyaumLjMveWvT2Hkd/cAJw+QBMfJ/EKVw==}
     dev: true
 
+  /bezier-js/6.1.3:
+    resolution: {integrity: sha512-VPFvkyO98oCJ1Tsi+bFBrKEWLdefAj4DJVaWp3xTEsdCbunC7Pt/nTeIgu/UdskBNcmHv8TOfsgdMZb1GsICmg==}
+    dev: false
+
   /bfj/7.0.2:
     resolution: {integrity: sha512-+e/UqUzwmzJamNF50tBV6tZPTORow7gQ96iFow+8b562OdMpEK0BcJEq2OSPEDmAbSMBQ7PKZ87ubFkgxpYWgw==}
     engines: {node: '>= 8.0.0'}
@@ -4525,6 +4553,12 @@ packages:
     engines: {node: '>= 0.6'}
     dev: true
 
+  /copy-to-clipboard/3.3.3:
+    resolution: {integrity: sha512-2KV8NhB5JqC3ky0r9PMCAZKbUHSwtEo4CwCs0KXgruG43gX5PMqDEBbVU4OUzw2MuAWUfsuFmWvEKG5QRfSnJA==}
+    dependencies:
+      toggle-selection: 1.0.6
+    dev: false
+
   /core-js-compat/3.30.1:
     resolution: {integrity: sha512-d690npR7MC6P0gq4npTl5n2VQeNAmUrJ90n+MHiKS7W2+xno4o3F5GDEuylSdi6EJ3VssibSGXOa1r3YXD3Mhw==}
     dependencies:
@@ -4668,6 +4702,12 @@ packages:
       postcss-selector-parser: 6.0.11
     dev: true
 
+  /css-in-js-utils/3.1.0:
+    resolution: {integrity: sha512-fJAcud6B3rRu+KHYk+Bwf+WFL2MDCJJ1XG9x137tJQ0xYxor7XziQtuGFbWNdqrvF4Tk26O3H73nfVqXt/fW1A==}
+    dependencies:
+      hyphenate-style-name: 1.0.4
+    dev: false
+
   /css-loader/6.7.3_webpack@5.80.0:
     resolution: {integrity: sha512-qhOH1KlBMnZP8FzRO6YCH9UHXQhVMcEGLyNdb7Hv2cpcmJbW0YrddO+tG1ab5nT41KpHIYGsbeHqxB9xPu1pKQ==}
     engines: {node: '>= 12.13.0'}
@@ -4760,7 +4800,6 @@ packages:
     dependencies:
       mdn-data: 2.0.14
       source-map: 0.6.1
-    dev: true
 
   /css-tree/2.3.1:
     resolution: {integrity: sha512-6Fv1DV/TYw//QF5IzQdqsNDjx/wc8TrMBZsqjL9eW01tWb7R7k/mq+/VXfJCl7SoD5emsJop9cOByJZfs8hYIw==}
@@ -4877,7 +4916,6 @@ packages:
 
   /csstype/3.1.2:
     resolution: {integrity: sha512-I7K1Uu0MBPzaFKg4nI5Q7Vs2t+3gWWW648spaF+Rg7pI9ds18Ugn+lvg4SHczUdKlHI5LWBXyqfS8+DufyBsgQ==}
-    dev: true
 
   /damerau-levenshtein/1.0.8:
     resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}
@@ -5288,7 +5326,6 @@ packages:
     resolution: {integrity: sha512-Sk5V6wVazPhq5MhpO+AUxJn5x7XSXGl1R93Vn7i+zS15KDVxQijejNCrz8340/2bgLBjR9GtEG8ZVKONDjcqGQ==}
     dependencies:
       stackframe: 1.3.4
-    dev: true
 
   /es-abstract/1.21.2:
     resolution: {integrity: sha512-y/B5POM2iBnIxCiernH1G7rC9qQoM77lLIMQLuob0zhp8C56Po81+2Nj0WFKnd0pNReDTnkYryc+zhOzpEIROg==}
@@ -6048,7 +6085,6 @@ packages:
 
   /fast-deep-equal/3.1.3:
     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
-    dev: true
 
   /fast-glob/3.2.12:
     resolution: {integrity: sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==}
@@ -6069,6 +6105,18 @@ packages:
     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
     dev: true
 
+  /fast-loops/1.1.3:
+    resolution: {integrity: sha512-8EZzEP0eKkEEVX+drtd9mtuQ+/QrlfW/5MlwcwK5Nds6EkZ/tRzEexkzUY2mIssnAyVLT+TKHuRXmFNNXYUd6g==}
+    dev: false
+
+  /fast-shallow-equal/1.0.0:
+    resolution: {integrity: sha512-HPtaa38cPgWvaCFmRNhlc6NG7pv6NUHqjPgVAkWGoB9mQMwYB27/K0CvOM5Czy+qpT3e8XJ6Q4aPAnzpNpzNaw==}
+    dev: false
+
+  /fastest-stable-stringify/2.0.2:
+    resolution: {integrity: sha512-bijHueCGd0LqqNK9b5oCMHc0MluJAx0cwqASgbWMvkO01lCYgIhacVRLcaDz3QnyYIRNJRDwMb41VuT6pHJ91Q==}
+    dev: false
+
   /fastq/1.15.0:
     resolution: {integrity: sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==}
     dependencies:
@@ -6732,6 +6780,10 @@ packages:
     hasBin: true
     dev: true
 
+  /hyphenate-style-name/1.0.4:
+    resolution: {integrity: sha512-ygGZLjmXfPHj+ZWh6LwbC37l43MhfztxetbFCoYTM2VjkIUpeHgSNn7QIyVFj7YQ1Wl9Cbw5sholVJPzWvC2MQ==}
+    dev: false
+
   /iconv-lite/0.4.24:
     resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}
     engines: {node: '>=0.10.0'}
@@ -6821,6 +6873,13 @@ packages:
     resolution: {integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==}
     dev: true
 
+  /inline-style-prefixer/6.0.4:
+    resolution: {integrity: sha512-FwXmZC2zbeeS7NzGjJ6pAiqRhXR0ugUShSNb6GApMl6da0/XGc4MOJsoWAywia52EEWbXNSy0pzkwz/+Y+swSg==}
+    dependencies:
+      css-in-js-utils: 3.1.0
+      fast-loops: 1.1.3
+    dev: false
+
   /internal-slot/1.0.5:
     resolution: {integrity: sha512-Y+R5hJrzs52QCG2laLn4udYVnxsfny9CpOhNhUvk/SSSVyF6T27FzRbF0sroPidSu3X8oEAkOn2K804mjpt6UQ==}
     engines: {node: '>= 0.4'}
@@ -7180,6 +7239,15 @@ packages:
       istanbul-lib-report: 3.0.0
     dev: true
 
+  /its-fine/1.1.1_react@18.2.0:
+    resolution: {integrity: sha512-v1Ia1xl20KbuSGlwoaGsW0oxsw8Be+TrXweidxD9oT/1lAh6O3K3/GIM95Tt6WCiv6W+h2M7RB1TwdoAjQyyKw==}
+    peerDependencies:
+      react: '>=18.0'
+    dependencies:
+      '@types/react-reconciler': 0.28.2
+      react: 18.2.0
+    dev: false
+
   /jake/10.8.5:
     resolution: {integrity: sha512-sVpxYeuAhWt0OTWITwT98oyV0GsXyMlXCF+3L1SuafBVUIr/uILGRB+NqwkzhgXKvoJpDIpQvqkUALgdmQsQxw==}
     engines: {node: '>=10'}
@@ -7742,6 +7810,10 @@ packages:
     hasBin: true
     dev: true
 
+  /js-cookie/2.2.1:
+    resolution: {integrity: sha512-HvdH2LzI/EAZcUwA8+0nKNtWHqS+ZmijLA30RwZA0bo7ToCckjK5MkGhjED9KoRcXO6BaGI3I9UIzSA1FKFPOQ==}
+    dev: false
+
   /js-sdsl/4.4.0:
     resolution: {integrity: sha512-FfVSdx6pJ41Oa+CF7RDaFmTnCaFhua+SNYQX74riGOpl96x+2jQCqEfQ2bnXu/5DPCqlRuiqyvTJM0Qjz26IVg==}
     dev: true
@@ -7915,6 +7987,10 @@ packages:
     resolution: {integrity: sha512-Y+60/zizpJ3HRH8DCss+q95yr6145JXZo46OTpFvDZWLfRCE4qChOyk1b26nMaNpfHHgxagk9dXT5OP0Tfe+dQ==}
     dev: true
 
+  /konva/9.0.2:
+    resolution: {integrity: sha512-kHPqZkIN191ysRD5OnWezIzcJtENyMZkCqRxi4szq9iyGzBDugxZkx5RmHWkmuDE9cR1lyeJoeQTeV5hoaGplg==}
+    dev: false
+
   /language-subtag-registry/0.3.22:
     resolution: {integrity: sha512-tN0MCzyWnoz/4nHS6uxdlFWoUZT7ABptwKPQ52Ea7URk6vll88bWBVhodtnlfEuCcKWNGoc+uGbw1cwa9IKh/w==}
     dev: true
@@ -8214,7 +8290,6 @@ packages:
 
   /mdn-data/2.0.14:
     resolution: {integrity: sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==}
-    dev: true
 
   /mdn-data/2.0.30:
     resolution: {integrity: sha512-GaqWWShW4kv/G9IEucWScBx9G1/vsFZZJUO+tD26M8J8z3Kw5RDQjaoZe03YAClgeS/SWPOcb4nkFBTEi5DUEA==}
@@ -8406,6 +8481,24 @@ packages:
       thenify-all: 1.6.0
     dev: true
 
+  /nano-css/5.3.5_biqbaboplfbrettd7655fr4n2y:
+    resolution: {integrity: sha512-vSB9X12bbNu4ALBu7nigJgRViZ6ja3OU7CeuiV1zMIbXOdmkLahgtPmh3GBOlDxbKY0CitqlPdOReGlBLSp+yg==}
+    peerDependencies:
+      react: '*'
+      react-dom: '*'
+    dependencies:
+      css-tree: 1.1.3
+      csstype: 3.1.2
+      fastest-stable-stringify: 2.0.2
+      inline-style-prefixer: 6.0.4
+      react: 18.2.0
+      react-dom: 18.2.0_react@18.2.0
+      rtl-css-js: 1.16.1
+      sourcemap-codec: 1.4.8
+      stacktrace-js: 2.0.2
+      stylis: 4.2.0
+    dev: false
+
   /nanoid/3.3.6:
     resolution: {integrity: sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==}
     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
@@ -9928,6 +10021,33 @@ packages:
     resolution: {integrity: sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==}
     dev: true
 
+  /react-konva/18.2.8_3ix5eityo3art7xms4yy5bn3bu:
+    resolution: {integrity: sha512-SQBJoL6DrnmTKGrqa5NYy6CB+eAck/2D4lXHDfu4yjRynUwYPXYjtbXTobkpifme4mY8udhbA3EBcMUkWBnfIA==}
+    peerDependencies:
+      konva: ^8.0.1 || ^7.2.5 || ^9.0.0
+      react: '>=18.0.0'
+      react-dom: '>=18.0.0'
+    dependencies:
+      '@types/react-reconciler': 0.28.2
+      its-fine: 1.1.1_react@18.2.0
+      konva: 9.0.2
+      react: 18.2.0
+      react-dom: 18.2.0_react@18.2.0
+      react-reconciler: 0.29.0_react@18.2.0
+      scheduler: 0.23.0
+    dev: false
+
+  /react-reconciler/0.29.0_react@18.2.0:
+    resolution: {integrity: sha512-wa0fGj7Zht1EYMRhKWwoo1H9GApxYLBuhoAuXN0TlltESAjDssB+Apf0T/DngVqaMyPypDmabL37vw/2aRM98Q==}
+    engines: {node: '>=0.10.0'}
+    peerDependencies:
+      react: ^18.2.0
+    dependencies:
+      loose-envify: 1.4.0
+      react: 18.2.0
+      scheduler: 0.23.0
+    dev: false
+
   /react-refresh/0.11.0:
     resolution: {integrity: sha512-F27qZr8uUqwhWZboondsPx8tnC3Ct3SxZA3V5WyEvujRyyNv0VYPhoBg1gZ8/MV5tubQp76Trw8lTv9hzRBa+A==}
     engines: {node: '>=0.10.0'}
@@ -10061,6 +10181,40 @@ packages:
       react: 18.2.0
     dev: false
 
+  /react-universal-interface/0.6.2_react@18.2.0+tslib@2.5.0:
+    resolution: {integrity: sha512-dg8yXdcQmvgR13RIlZbTRQOoUrDciFVoSBZILwjE2LFISxZZ8loVJKAkuzswl5js8BHda79bIb2b84ehU8IjXw==}
+    peerDependencies:
+      react: '*'
+      tslib: '*'
+    dependencies:
+      react: 18.2.0
+      tslib: 2.5.0
+    dev: false
+
+  /react-use/17.4.0_biqbaboplfbrettd7655fr4n2y:
+    resolution: {integrity: sha512-TgbNTCA33Wl7xzIJegn1HndB4qTS9u03QUwyNycUnXaweZkE4Kq2SB+Yoxx8qbshkZGYBDvUXbXWRUmQDcZZ/Q==}
+    peerDependencies:
+      react: ^16.8.0  || ^17.0.0 || ^18.0.0
+      react-dom: ^16.8.0  || ^17.0.0 || ^18.0.0
+    dependencies:
+      '@types/js-cookie': 2.2.7
+      '@xobotyi/scrollbar-width': 1.9.5
+      copy-to-clipboard: 3.3.3
+      fast-deep-equal: 3.1.3
+      fast-shallow-equal: 1.0.0
+      js-cookie: 2.2.1
+      nano-css: 5.3.5_biqbaboplfbrettd7655fr4n2y
+      react: 18.2.0
+      react-dom: 18.2.0_react@18.2.0
+      react-universal-interface: 0.6.2_react@18.2.0+tslib@2.5.0
+      resize-observer-polyfill: 1.5.1
+      screenfull: 5.2.0
+      set-harmonic-interval: 1.0.1
+      throttle-debounce: 3.0.1
+      ts-easing: 0.2.0
+      tslib: 2.5.0
+    dev: false
+
   /react/18.2.0:
     resolution: {integrity: sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==}
     engines: {node: '>=0.10.0'}
@@ -10157,7 +10311,6 @@ packages:
 
   /regenerator-runtime/0.13.11:
     resolution: {integrity: sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==}
-    dev: true
 
   /regenerator-transform/0.15.1:
     resolution: {integrity: sha512-knzmNAcuyxV+gQCufkYcvOqX/qIIfHLv0u5x79kRxuGojfYVky1f15TzZEu2Avte8QGepvUNTnLskf8E6X6Vyg==}
@@ -10236,6 +10389,10 @@ packages:
     resolution: {integrity: sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==}
     dev: true
 
+  /resize-observer-polyfill/1.5.1:
+    resolution: {integrity: sha512-LwZrotdHOo12nQuZlHEmtuXdqGoOD0OhaxopaNFxWzInpEgaLWoVuAMbTzixuosCx2nEG58ngzW3vxdWoxIgdg==}
+    dev: false
+
   /resolve-cwd/3.0.0:
     resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}
     engines: {node: '>=8'}
@@ -10352,6 +10509,12 @@ packages:
       fsevents: 2.3.2
     dev: true
 
+  /rtl-css-js/1.16.1:
+    resolution: {integrity: sha512-lRQgou1mu19e+Ya0LsTvKrVJ5TYUbqCVPAiImX3UfLTenarvPUl1QFdvu5Z3PYmHT9RCcwIfbjRQBntExyj3Zg==}
+    dependencies:
+      '@babel/runtime': 7.21.0
+    dev: false
+
   /run-parallel/1.2.0:
     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
     dependencies:
@@ -10481,6 +10644,11 @@ packages:
       ajv-keywords: 5.1.0_ajv@8.12.0
     dev: true
 
+  /screenfull/5.2.0:
+    resolution: {integrity: sha512-9BakfsO2aUQN2K9Fdbj87RJIEZ82Q9IGim7FqM5OsebfoFC6ZHXgDq/KvniuLTPdeM8wY2o6Dj3WQ7KeQCj3cA==}
+    engines: {node: '>=0.10.0'}
+    dev: false
+
   /select-hose/2.0.0:
     resolution: {integrity: sha512-mEugaLK+YfkijB4fx0e6kImuJdCIt2LxCRcbEYPqRGCs4F2ogyfZU5IAZRdjCP8JPq2AtdNoC/Dux63d9Kiryg==}
     dev: true
@@ -10570,6 +10738,11 @@ packages:
       - supports-color
     dev: true
 
+  /set-harmonic-interval/1.0.1:
+    resolution: {integrity: sha512-AhICkFV84tBP1aWqPwLZqFvAwqEoVA9kxNMniGEUvzOlm4vLmOFLiTT3UZ6bziJTy4bOVpzWGTfSCbmaayGx8g==}
+    engines: {node: '>=6.9'}
+    dev: false
+
   /setprototypeof/1.1.0:
     resolution: {integrity: sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==}
     dev: true
@@ -10710,10 +10883,14 @@ packages:
       source-map: 0.6.1
     dev: true
 
+  /source-map/0.5.6:
+    resolution: {integrity: sha512-MjZkVp0NHr5+TPihLcadqnlVoGIoWo4IBHptutGh9wI3ttUYvCG26HkSuDi+K6lsZ25syXJXcctwgyVCt//xqA==}
+    engines: {node: '>=0.10.0'}
+    dev: false
+
   /source-map/0.6.1:
     resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
     engines: {node: '>=0.10.0'}
-    dev: true
 
   /source-map/0.7.4:
     resolution: {integrity: sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==}
@@ -10730,7 +10907,6 @@ packages:
   /sourcemap-codec/1.4.8:
     resolution: {integrity: sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==}
     deprecated: Please use @jridgewell/sourcemap-codec instead
-    dev: true
 
   /spdx-correct/3.2.0:
     resolution: {integrity: sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==}
@@ -10795,6 +10971,12 @@ packages:
     deprecated: 'Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibility'
     dev: true
 
+  /stack-generator/2.0.10:
+    resolution: {integrity: sha512-mwnua/hkqM6pF4k8SnmZ2zfETsRUpWXREfA/goT8SLCV4iOFa4bzOX2nDipWAZFPTjLvQB82f5yaodMVhK0yJQ==}
+    dependencies:
+      stackframe: 1.3.4
+    dev: false
+
   /stack-utils/2.0.6:
     resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
     engines: {node: '>=10'}
@@ -10804,7 +10986,21 @@ packages:
 
   /stackframe/1.3.4:
     resolution: {integrity: sha512-oeVtt7eWQS+Na6F//S4kJ2K2VbRlS9D43mAlMyVpVWovy9o+jfgH8O9agzANzaiLjclA0oYzUXEM4PurhSUChw==}
-    dev: true
+
+  /stacktrace-gps/3.1.2:
+    resolution: {integrity: sha512-GcUgbO4Jsqqg6RxfyTHFiPxdPqF+3LFmQhm7MgCuYQOYuWyqxo5pwRPz5d/u6/WYJdEnWfK4r+jGbyD8TSggXQ==}
+    dependencies:
+      source-map: 0.5.6
+      stackframe: 1.3.4
+    dev: false
+
+  /stacktrace-js/2.0.2:
+    resolution: {integrity: sha512-Je5vBeY4S1r/RnLydLl0TBTi3F2qdfWmYsGvtfZgEI+SCprPppaIhQf5nGcal4gI4cGpCV/duLcAzT1np6sQqg==}
+    dependencies:
+      error-stack-parser: 2.1.4
+      stack-generator: 2.0.10
+      stacktrace-gps: 3.1.2
+    dev: false
 
   /statuses/1.5.0:
     resolution: {integrity: sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==}
@@ -11005,6 +11201,10 @@ packages:
       postcss-selector-parser: 6.0.11
     dev: true
 
+  /stylis/4.2.0:
+    resolution: {integrity: sha512-Orov6g6BB1sDfYgzWfTHDOxamtX1bE/zo104Dh9e6fqJ3PooipYyfJ0pUmrZO2wAvO8YbEyeFrkV91XTsGMSrw==}
+    dev: false
+
   /sucrase/3.32.0:
     resolution: {integrity: sha512-ydQOU34rpSyj2TGyz4D2p8rbktIOZ8QY9s+DGLvFU1i5pWJE8vkpruCjGCMHsdXwnD7JDcS+noSwM/a7zyNFDQ==}
     engines: {node: '>=8'}
@@ -11232,6 +11432,11 @@ packages:
     resolution: {integrity: sha512-WKexMoJj3vEuK0yFEapj8y64V0A6xcuPuK9Gt1d0R+dzCSJc0lHqQytAbSB4cDAK0dWh4T0E2ETkoLE2WZ41OQ==}
     dev: true
 
+  /throttle-debounce/3.0.1:
+    resolution: {integrity: sha512-dTEWWNu6JmeVXY0ZYoPuH5cRIwc0MeGbJwah9KUNYSJwommQpCzTySTpEe8Gs1J23aeWEuAobe4Ag7EHVt/LOg==}
+    engines: {node: '>=10'}
+    dev: false
+
   /through/2.3.8:
     resolution: {integrity: sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==}
     dev: true
@@ -11262,6 +11467,10 @@ packages:
       is-number: 7.0.0
     dev: true
 
+  /toggle-selection/1.0.6:
+    resolution: {integrity: sha512-BiZS+C1OS8g/q2RRbJmy59xpyghNBqrr6k5L/uKBGRsTfxmu3ffiRnd8mlGPUVayg8pvfi5urfnu8TU7DVOkLQ==}
+    dev: false
+
   /toidentifier/1.0.1:
     resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
     engines: {node: '>=0.6'}
@@ -11304,6 +11513,10 @@ packages:
     resolution: {integrity: sha512-c3zayb8/kWWpycWYg87P71E1S1ZL6b6IJxfb5fvsUgsf0S2MVGaDhDXXjDMpdCpfWXqptc+4mXwmiy1ypXqRAA==}
     dev: true
 
+  /ts-easing/0.2.0:
+    resolution: {integrity: sha512-Z86EW+fFFh/IFB1fqQ3/+7Zpf9t2ebOAxNI/V6Wo7r5gqiqtxmgTlQ1qbqQcjLKYeSHPTsEmvlJUDg/EuL0uHQ==}
+    dev: false
+
   /ts-interface-checker/0.1.13:
     resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}
     dev: true
@@ -11372,7 +11585,6 @@ packages:
 
   /tslib/2.5.0:
     resolution: {integrity: sha512-336iVw3rtn2BUK7ORdIAHTyxHGRIHVReokCR3XjbckJMK7ms8FysBfhLR8IXnAgy7T0PTPNBWKiH514FOW/WSg==}
-    dev: true
 
   /tsutils/3.21.0_typescript@4.9.5:
     resolution: {integrity: sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKhRMPEmjBRPzs2W7O1OA==}
diff --git a/src/app.css b/src/app.css
new file mode 100644
index 0000000..fb1a29b
--- /dev/null
+++ b/src/app.css
@@ -0,0 +1,8 @@
+html, body {
+  height: 100%;
+  margin: 0;
+}
+
+#root {
+  padding: 8px;
+}
\ No newline at end of file
diff --git a/src/index.tsx b/src/index.tsx
index 6d1e5d8..7317259 100644
--- a/src/index.tsx
+++ b/src/index.tsx
@@ -5,7 +5,9 @@
 
 import ReactDOM from 'react-dom/client'
 import App from './App'
+import './app.css'
 import './styles/uno.css'
+
 const root = ReactDOM.createRoot(
   document.getElementById('root') as HTMLElement,
 )
diff --git a/src/model/type.ts b/src/model/type.ts
index b245311..852d72e 100644
--- a/src/model/type.ts
+++ b/src/model/type.ts
@@ -10,3 +10,5 @@ export type PropsWithStyle<P = unknown> = P & { style?: CSSProperties }
 export type PropsWithClassName<P = unknown> = P & { className?: string }
 
 export type PropsWithStyleAndClassName<P = unknown> = P & PropsWithStyle & PropsWithClassName
+
+export type Tuple<TItem, TLength extends number> = [TItem, ...TItem[]] & { length: TLength }
diff --git a/src/pages/konva-page/index.tsx b/src/pages/konva-page/index.tsx
new file mode 100644
index 0000000..6610f1d
--- /dev/null
+++ b/src/pages/konva-page/index.tsx
@@ -0,0 +1,47 @@
+/**
+ * @description 图形绘制
+ * @author clyan
+ */
+
+import { useEffect, useRef, useState } from 'react'
+import { createPortal } from 'react-dom'
+import { Bezier } from 'bezier-js'
+import { CurveDrawer } from './utils/curve-drawer'
+
+export function KonvaPage() {
+  const ref = useRef<HTMLCanvasElement | null>(null)
+
+  const [curveDrawer, setCurveDrawer] = useState<CurveDrawer>()
+
+  useEffect(() => {
+    if (!ref.current) {
+      console.warn('canvas element ins\'t exit')
+      return
+    }
+    const curveDrawer = new CurveDrawer({ canvasEle: ref.current })
+
+    setCurveDrawer(curveDrawer)
+  }, [])
+
+  useEffect(() => {
+    if (!curveDrawer) return
+
+    const curve = new Bezier(150, 40, 80, 30, 105, 150)
+    curveDrawer.drawSkeleton(curve)
+    curveDrawer.drawCurve(curve)
+    curveDrawer.setColor('red')
+    curve.outlineshapes(25, 25).forEach((s) => {
+      curveDrawer.setRandomFill(0.2)
+      curveDrawer.drawShape(s)
+    })
+  }, [curveDrawer])
+
+  return (
+    <>
+      {createPortal(
+        <canvas className="absolute top-0 h-screen w-screen" ref={ref} />,
+        document.body,
+      )}
+    </>
+  )
+}
diff --git a/src/pages/konva-page/utils/curve-drawer.ts b/src/pages/konva-page/utils/curve-drawer.ts
new file mode 100644
index 0000000..8432795
--- /dev/null
+++ b/src/pages/konva-page/utils/curve-drawer.ts
@@ -0,0 +1,295 @@
+/**
+ * @description 贝塞尔曲线运动
+ * @author clyan
+ */
+
+import type { Bezier, Shape } from 'bezier-js'
+
+import type { Tuple } from '@/model/type'
+
+export interface Coordinate {
+  /** x */
+  x: number
+  /** y */
+  y: number
+}
+
+interface BezierCurveProps {
+  /** canvas节点 */
+  canvasEle: HTMLCanvasElement
+}
+
+export class CurveDrawer {
+  /** canvas节点 */
+  canvasEle: HTMLCanvasElement
+  ctx: CanvasRenderingContext2D | null
+  randomIndex = 0
+  randomColors: string[] = []
+  constructor({ canvasEle }: BezierCurveProps) {
+    this.canvasEle = canvasEle
+    this.ctx = canvasEle.getContext('2d')
+    this.adaptDPR()
+
+    for (let i = 0, j; i < 360; i++) {
+      j = (i * 47) % 360
+      this.randomColors.push(`hsl(${j},50%,50%)`)
+    }
+  }
+
+  adaptDPR() { // 在初始化 canvas 的时候就要调用该方法
+    const dpr = window.devicePixelRatio
+    const { height, width } = this.canvasEle.getBoundingClientRect()
+
+    // 重新设置 canvas 自身宽高大小和 css 大小。放大 canvas；css 保持不变，因为我们需要那么多的点
+    this.canvasEle.width = Math.round(width * dpr)
+    this.canvasEle.height = Math.round(height * dpr)
+
+    this.canvasEle.style.width = `${width}px`
+    this.canvasEle.style.height = `${height}px`
+  }
+
+  getCanvas() {
+    return this.canvasEle
+  }
+
+  setColor(c: string) {
+    const ctx = this.ctx
+    if (!ctx) return
+    ctx.strokeStyle = c
+  }
+
+  noColor() {
+    const ctx = this.ctx
+    if (!ctx) return
+    ctx.strokeStyle = 'transparent'
+  }
+
+  setRandomColor() {
+    const ctx = this.ctx
+    if (!ctx) return
+    this.randomIndex = (this.randomIndex + 1) % this.randomColors.length
+    const c = this.randomColors[this.randomIndex]
+    ctx.strokeStyle = c
+  }
+
+  setRandomFill(a: number) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    this.randomIndex = (this.randomIndex + 1) % this.randomColors.length
+    a = typeof a === 'undefined' ? 1 : a
+    let c = this.randomColors[this.randomIndex]
+    c = c.replace('hsl(', 'hsla(').replace(')', `,${a})`)
+    ctx.fillStyle = c
+  }
+
+  setFill(c: string) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    ctx.fillStyle = c
+  }
+
+  noFill() {
+    const ctx = this.ctx
+    if (!ctx) return
+    ctx.fillStyle = 'transparent'
+  }
+
+  drawSkeleton(curve: Bezier, offset?: Coordinate, noCoords?: boolean) {
+    if (!this.ctx) return
+    offset = offset || { x: 0, y: 0 }
+    const pts = curve.points
+    this.ctx.strokeStyle = 'lightgrey'
+    this.drawLine(pts[0], pts[1], offset)
+    if (pts.length === 3)
+      this.drawLine(pts[1], pts[2], offset)
+
+    else
+      this.drawLine(pts[2], pts[3], offset)
+
+    this.ctx.strokeStyle = 'black'
+    if (!noCoords) this.drawPoints(pts, offset)
+  }
+
+  // 绘制贝塞尔曲线
+  drawCurve(curve: Bezier, offset?: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const ox = offset.x
+    const oy = offset.y
+    ctx.beginPath()
+    const p = curve.points
+    ctx.moveTo(p[0].x + ox, p[0].y + oy)
+    if (p.length === 3)
+      ctx.quadraticCurveTo(p[1].x + ox, p[1].y + oy, p[2].x + ox, p[2].y + oy)
+
+    if (p.length === 4) {
+      ctx.bezierCurveTo(
+        p[1].x + ox,
+        p[1].y + oy,
+        p[2].x + ox,
+        p[2].y + oy,
+        p[3].x + ox,
+        p[3].y + oy,
+      )
+    }
+    ctx.stroke()
+    ctx.closePath()
+  }
+
+  drawLine(p1: Coordinate, p2: Coordinate, offset: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const ox = offset.x
+    const oy = offset.y
+    ctx.beginPath()
+    ctx.moveTo(p1.x + ox, p1.y + oy)
+    ctx.lineTo(p2.x + ox, p2.y + oy)
+    ctx.stroke()
+  }
+
+  drawPoint(p: Coordinate, offset: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const ox = offset.x
+    const oy = offset.y
+    ctx.beginPath()
+    ctx.arc(p.x + ox, p.y + oy, 5, 0, 2 * Math.PI)
+    ctx.stroke()
+  }
+
+  drawPoints(points: Coordinate[], offset: Coordinate) {
+    offset = offset || { x: 0, y: 0 }
+    points.forEach(p => this.drawCircle(p, 3, offset))
+  }
+
+  drawArc(p: Parameters<CanvasPath['arc']>, offset: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const ox = offset.x
+    const oy = offset.y
+    ctx.beginPath()
+    ctx.moveTo(p[0] + ox, p[1] + oy)
+    ctx.arc(...p)
+    ctx.lineTo(p[0] + ox, p[1] + oy)
+    ctx.fill()
+    ctx.stroke()
+  }
+
+  drawCircle(p: Coordinate, r: number, offset: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const ox = offset.x
+    const oy = offset.y
+    ctx.beginPath()
+    ctx.arc(p.x + ox, p.y + oy, r, 0, 2 * Math.PI)
+    ctx.stroke()
+  }
+
+  drawHull(hull: Tuple<Coordinate, 6 | 8>) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    ctx.beginPath()
+    if (hull.length === 6) {
+      ctx.moveTo(hull[0].x, hull[0].y)
+      ctx.lineTo(hull[1].x, hull[1].y)
+      ctx.lineTo(hull[2].x, hull[2].y)
+      ctx.moveTo(hull[3].x, hull[3].y)
+      ctx.lineTo(hull[4].x, hull[4].y)
+    }
+    else {
+      ctx.moveTo(hull[0].x, hull[0].y)
+      ctx.lineTo(hull[1].x, hull[1].y)
+      ctx.lineTo(hull[2].x, hull[2].y)
+      ctx.lineTo(hull[3].x, hull[3].y)
+      ctx.moveTo(hull[4].x, hull[4].y)
+      ctx.lineTo(hull[5].x, hull[5].y)
+      ctx.lineTo(hull[6].x, hull[6].y)
+      ctx.moveTo(hull[7].x, hull[7].y)
+      ctx.lineTo(hull[8].x, hull[8].y)
+    }
+    ctx.stroke()
+  }
+
+  drawShape(shape: Shape, offset?: Coordinate) {
+    const ctx = this.ctx
+    if (!ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    const order = shape.forward.points.length - 1
+    const scl = shape.startcap.points.length
+    const ecl = shape.endcap.points.length
+
+    ctx.beginPath()
+    ctx.moveTo(
+      offset.x + shape.startcap.points[0].x,
+      offset.y + shape.startcap.points[0].y,
+    )
+    ctx.lineTo(
+      offset.x + shape.startcap.points[scl - 1].x,
+      offset.y + shape.startcap.points[scl - 1].y,
+    )
+    if (order === 3) {
+      ctx.bezierCurveTo(
+        offset.x + shape.forward.points[1].x,
+        offset.y + shape.forward.points[1].y,
+        offset.x + shape.forward.points[2].x,
+        offset.y + shape.forward.points[2].y,
+        offset.x + shape.forward.points[3].x,
+        offset.y + shape.forward.points[3].y,
+      )
+    }
+    else {
+      ctx.quadraticCurveTo(
+        offset.x + shape.forward.points[1].x,
+        offset.y + shape.forward.points[1].y,
+        offset.x + shape.forward.points[2].x,
+        offset.y + shape.forward.points[2].y,
+      )
+    }
+    ctx.lineTo(
+      offset.x + shape.endcap.points[ecl - 1].x,
+      offset.y + shape.endcap.points[ecl - 1].y,
+    )
+    if (order === 3) {
+      ctx.bezierCurveTo(
+        offset.x + shape.back.points[1].x,
+        offset.y + shape.back.points[1].y,
+        offset.x + shape.back.points[2].x,
+        offset.y + shape.back.points[2].y,
+        offset.x + shape.back.points[3].x,
+        offset.y + shape.back.points[3].y,
+      )
+    }
+    else {
+      ctx.quadraticCurveTo(
+        offset.x + shape.back.points[1].x,
+        offset.y + shape.back.points[1].y,
+        offset.x + shape.back.points[2].x,
+        offset.y + shape.back.points[2].y,
+      )
+    }
+    ctx.closePath()
+    ctx.fill()
+    ctx.stroke()
+  }
+
+  drawText(text: string, offset: Coordinate) {
+    if (!this.ctx) return
+
+    offset = offset || { x: 0, y: 0 }
+    this.ctx.fillText(text, offset.x, offset.y)
+  }
+}
diff --git a/src/router/index.tsx b/src/router/index.tsx
index 753b043..28680ba 100644
--- a/src/router/index.tsx
+++ b/src/router/index.tsx
@@ -11,27 +11,38 @@ import { Layout } from '../pages/layout'
 import { Welcome } from '../pages/welcome'
 import { RequireAuth } from '../pages/auth/components/require-auth'
 import { NoMatch } from '../pages/no-match'
+import { KonvaPage } from '../pages/konva-page'
+import { RouterKey } from './models/enums'
 
 const router = createBrowserRouter([
   {
     element: <Layout />,
     children: [
       {
-        path: '/',
+        path: RouterKey.Home,
         element: <Welcome />,
       },
       {
-        path: '/login',
+        path: RouterKey.Login,
         element: <Login />,
       },
       {
-        path: '/react-table-page',
+        path: RouterKey.ReactTablePage,
         element: (
           <RequireAuth>
             <ReactTablePage />
           </RequireAuth>
         ),
       },
+      {
+
+        path: RouterKey.KonvaPage,
+        element: (
+          <RequireAuth>
+            <KonvaPage />
+          </RequireAuth>
+        ),
+      },
       {
         path: '*',
         element: <NoMatch />,
diff --git a/src/router/models/enums.ts b/src/router/models/enums.ts
index 90fbe83..e968fe2 100644
--- a/src/router/models/enums.ts
+++ b/src/router/models/enums.ts
@@ -10,4 +10,6 @@ export const enum RouterKey {
   Login = '/login',
   /** React Table */
   ReactTablePage = '/react-table-page',
+  /** 图形绘制页 */
+  KonvaPage = '/konva-page',
 }
